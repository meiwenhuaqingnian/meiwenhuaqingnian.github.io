{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. \u4e8c\u6b21\u8fdb\u5165","title":"\u7b80\u4ecb"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#_1","text":"","title":"\u4e8c\u6b21\u8fdb\u5165"},{"location":"c%E8%AF%AD%E8%A8%80/UML/","text":"\u53c2\u8003\u6587\u7ae0\uff1a https://blog.csdn.net/qq_43530773/article/details/118250152 https://blog.csdn.net/realmagicboy/article/details/90289062 \u4ec0\u4e48\u662fUML UML\uff08Unified Modeling Language\uff09\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff0c\u53c8\u79f0\u6807\u51c6\u5efa\u6a21\u8bed\u8a00\u3002\u662f\u7528\u6765\u5bf9\u8f6f\u4ef6\u5bc6\u96c6\u7cfb\u7edf\u8fdb\u884c\u53ef\u89c6\u5316\u5efa\u6a21\u7684 \u4e00\u79cd\u8bed\u8a00 \u3002UML\u7684\u5b9a\u4e49\u5305\u62ec UML\u8bed\u4e49\u548cUML\u8868\u793a\u6cd5 \u4e24\u4e2a\u5143\u7d20\u3002 UML\u7528\u9014 UML\u7684\u76ee\u6807\u662f\u4ee5\u9762\u5411\u5bf9\u8c61\u56fe\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u4efb\u4f55\u7c7b\u578b\u7684\u7cfb\u7edf\uff0c\u5177\u6709\u5f88\u5bbd\u7684\u5e94\u7528\u9886\u57df\u3002\u901a\u8fc7\u56fe\u4f8b\uff0c\u53ef\u4ee5\u5728\u9700\u6c42\u5206\u6790\uff0c\u8bbe\u8ba1\u5f00\u53d1\uff0c\u7ef4\u62a4\u5347\u7ea7\u7b49\u4e0d\u540c\u9636\u6bb5\u66f4\u6e05\u6670\u76f4\u89c2\u7684\u63cf\u8ff0\u9700\u6c42\uff0c\u660e\u786e\u76ee\u6807\u3002 \u5e38\u7528UML\u56fe \u7528\u4f8b\u56fe \u7528\u4f8b\u56fe\u662f\u4ece\u7528\u6237\uff08\u89d2\u8272\uff09\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u63cf\u8ff0\u7cfb\u7edf\u529f\u80fd\u5173\u7cfb\u3002 \u7c7b\u56fe\uff08\u6700\u5e38\u7528\uff0c\u6700\u91cd\u8981\uff09 \u7c7b\u56fe\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a \u7cfb\u7edf\u4e2d\u7684\u7c7b\u3001\u63a5\u53e3\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u9759\u6001\u7ed3\u6784\u548c\u5173\u7cfb \u7684\u4e00\u79cd\u9759\u6001\u6a21\u578b\u3002\u3002\u662f\u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\u5efa\u6a21\u4e2d\u6700\u5e38\u7528\u548c\u6700\u91cd\u8981\u7684\u56fe\uff0c\u662f\u5b9a\u4e49\u5176\u4ed6\u56fe\u7684\u57fa\u7840\u3002 \u7c7b\u56fe\u4e2d\uff0c\u5e38\u89c1\u6709\u4ee5\u4e0b\u51e0\u79cd\u5173\u7cfb\uff1a \u6cdb\u5316\uff0c\u5b9e\u73b0\uff0c\u5173\u8054\uff0c\u805a\u5408\uff0c\u7ec4\u5408\uff0c\u4f9d\u8d56\u3002 \u6cdb\u5316 \u6cdb\u5316\u662f\u4e00\u79cd\u7ee7\u627f\u5173\u7cfb\uff0c\u8868\u793a\u4e00\u822c\u4e0e\u7279\u6b8a\u7684\u5173\u7cfb\uff0c\u5b83\u6307\u5b9a\u4e86\u5b50\u7c7b\u5982\u4f55\u7ee7\u627f\u7236\u7c7b\u7684\u6240\u6709\u7279\u5f81\u548c\u884c\u4e3a\u3002 \u7ee7\u627f\u4f7f\u7528\u4e00\u4e2a\u5b9e\u7ebf+\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\uff0c\u4ece\u5b50\u7c7b\u6307\u5411\u7236\u7c7b\u5373\u8868\u793a\u4e00\u4e2a\u7ee7\u627f\u3002 \u5b9e\u73b0 \u662f\u4e00\u79cd\u7c7b\u4e0e\u63a5\u53e3\u7684\u5173\u7cfb\uff0c\u8868\u793a\u7c7b\u662f\u63a5\u53e3\u6240\u6709\u7279\u5f81\u548c\u884c\u4e3a\u7684\u5b9e\u73b0\u3002 \u5b9e\u73b0\u4f7f\u7528\u4e00\u4e2a\u865a\u7ebf+\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\uff0c\u4ece\u5b9e\u4f8b\u6307\u5411\u63a5\u53e3\u5373\u8868\u793a\u4e00\u4e2a\u5b9e\u73b0\u3002 \u5173\u8054 \u662f\u4e00\u79cd\u62e5\u6709\u5173\u7cfb\uff0c\u5b83\u4f7f\u4e00\u4e2a\u7c7b\u77e5\u9053\u53e6\u4e00\u4e2a\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u5f53\u4e00\u4e2a\u5173\u7cfb\u660e\u663e\u662f\u4e00\u79cd\u62e5\u6709\u5173\u7cfb\uff0c\u4f46\u4e0d\u662f\u805a\u5408\u4e5f\u4e0d\u662f\u7ec4\u5408\u90a3\u6837\u6765\u63cf\u8ff0\u6574\u4f53\u4e0e\u5c40\u90e8\u7684\u65f6\u5019\uff0c\u5c31\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u5173\u8054\u5173\u7cfb\u6765\u63cf\u8ff0\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u524d\u4e24\u8005\u90fd\u662f\uff08\u66f4\u52a0\u51c6\u786e\u7684\uff09\u5173\u8054\u5173\u7cfb\uff0c\u4f7f\u7528\u5e26\u5b9e\u7ebf\u7684\u7bad\u5934\u3002 \u805a\u5408 \u662f\u6574\u4f53\u4e0e\u90e8\u5206\u7684\u5173\u7cfb\uff0c\u4e14\u90e8\u5206\u53ef\u4ee5\u79bb\u5f00\u6574\u4f53\u800c\u5355\u72ec\u5b58\u5728\u3002\u5982\u8f66\u548c\u8f66\u8f6e\u3002\u662f\u5f31\u5173\u8054 \u805a\u5408\u4f7f\u7528\u4e00\u4e2a\u5b9e\u7ebf+\u7a7a\u5fc3\u83f1\u5f62\u7bad\u5934\uff0c\u4ece\u6574\u4f53\u6307\u5411\u5c40\u90e8\u5373\u8868\u793a\u4e00\u4e2a\u805a\u5408\u3002 \u7ec4\u5408 \u662f\u6574\u4f53\u4e0e\u90e8\u5206\u7684\u5173\u7cfb\uff0c\u4f46\u90e8\u5206\u4e0d\u53ef\u4ee5\u79bb\u5f00\u6574\u4f53\u800c\u5355\u72ec\u5b58\u5728\u3002\u5982\u9e1f\u548c\u7fc5\u8180\u3002\u662f\u5f3a\u5173\u8054 \u7ec4\u5408\u4f7f\u7528\u4e00\u4e2a\u5b9e\u7ebf+\u5b9e\u5fc3\u83f1\u5f62\u7bad\u5934\uff0c\u4ece\u6574\u4f53\u6307\u5411\u5c40\u90e8\u5373\u8868\u793a\u4e00\u4e2a\u7ec4\u5408\u3002 \u4f9d\u8d56 \u662f\u4e00\u79cd\u4f7f\u7528\u5173\u7cfb\uff0c\u5373\u4e00\u4e2a\u7c7b\u7684\u5b9e\u73b0\u9700\u8981\u53e6\u4e00\u4e2a\u7c7b\u7684\u534f\u52a9\u3002 \u4f9d\u8d56\u5173\u7cfb\u4e0d\u540c\u4e8e\u5173\u8054\u5173\u7cfb\uff0c\u4f7f\u7528\u4e00\u4e2a\u865a\u7ebf\u7bad\u5934\uff0c\u4ece\u4f7f\u7528\u8005\u6307\u5411\u88ab\u4f7f\u7528\u8005\u3002 \u5bf9\u8c61\u56fe \u72b6\u6001\u56fe \u65f6\u5e8f\u56fe \u6d3b\u52a8\u56fe \u534f\u4f5c\u56fe \u6784\u4ef6\u56fe \u90e8\u7f72\u56fe","title":"UML"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#uml","text":"UML\uff08Unified Modeling Language\uff09\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff0c\u53c8\u79f0\u6807\u51c6\u5efa\u6a21\u8bed\u8a00\u3002\u662f\u7528\u6765\u5bf9\u8f6f\u4ef6\u5bc6\u96c6\u7cfb\u7edf\u8fdb\u884c\u53ef\u89c6\u5316\u5efa\u6a21\u7684 \u4e00\u79cd\u8bed\u8a00 \u3002UML\u7684\u5b9a\u4e49\u5305\u62ec UML\u8bed\u4e49\u548cUML\u8868\u793a\u6cd5 \u4e24\u4e2a\u5143\u7d20\u3002","title":"\u4ec0\u4e48\u662fUML"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#uml_1","text":"UML\u7684\u76ee\u6807\u662f\u4ee5\u9762\u5411\u5bf9\u8c61\u56fe\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u4efb\u4f55\u7c7b\u578b\u7684\u7cfb\u7edf\uff0c\u5177\u6709\u5f88\u5bbd\u7684\u5e94\u7528\u9886\u57df\u3002\u901a\u8fc7\u56fe\u4f8b\uff0c\u53ef\u4ee5\u5728\u9700\u6c42\u5206\u6790\uff0c\u8bbe\u8ba1\u5f00\u53d1\uff0c\u7ef4\u62a4\u5347\u7ea7\u7b49\u4e0d\u540c\u9636\u6bb5\u66f4\u6e05\u6670\u76f4\u89c2\u7684\u63cf\u8ff0\u9700\u6c42\uff0c\u660e\u786e\u76ee\u6807\u3002","title":"UML\u7528\u9014"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#uml_2","text":"","title":"\u5e38\u7528UML\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_1","text":"\u7528\u4f8b\u56fe\u662f\u4ece\u7528\u6237\uff08\u89d2\u8272\uff09\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u63cf\u8ff0\u7cfb\u7edf\u529f\u80fd\u5173\u7cfb\u3002","title":"\u7528\u4f8b\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_2","text":"\u7c7b\u56fe\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a \u7cfb\u7edf\u4e2d\u7684\u7c7b\u3001\u63a5\u53e3\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u9759\u6001\u7ed3\u6784\u548c\u5173\u7cfb \u7684\u4e00\u79cd\u9759\u6001\u6a21\u578b\u3002\u3002\u662f\u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\u5efa\u6a21\u4e2d\u6700\u5e38\u7528\u548c\u6700\u91cd\u8981\u7684\u56fe\uff0c\u662f\u5b9a\u4e49\u5176\u4ed6\u56fe\u7684\u57fa\u7840\u3002 \u7c7b\u56fe\u4e2d\uff0c\u5e38\u89c1\u6709\u4ee5\u4e0b\u51e0\u79cd\u5173\u7cfb\uff1a \u6cdb\u5316\uff0c\u5b9e\u73b0\uff0c\u5173\u8054\uff0c\u805a\u5408\uff0c\u7ec4\u5408\uff0c\u4f9d\u8d56\u3002 \u6cdb\u5316 \u6cdb\u5316\u662f\u4e00\u79cd\u7ee7\u627f\u5173\u7cfb\uff0c\u8868\u793a\u4e00\u822c\u4e0e\u7279\u6b8a\u7684\u5173\u7cfb\uff0c\u5b83\u6307\u5b9a\u4e86\u5b50\u7c7b\u5982\u4f55\u7ee7\u627f\u7236\u7c7b\u7684\u6240\u6709\u7279\u5f81\u548c\u884c\u4e3a\u3002 \u7ee7\u627f\u4f7f\u7528\u4e00\u4e2a\u5b9e\u7ebf+\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\uff0c\u4ece\u5b50\u7c7b\u6307\u5411\u7236\u7c7b\u5373\u8868\u793a\u4e00\u4e2a\u7ee7\u627f\u3002 \u5b9e\u73b0 \u662f\u4e00\u79cd\u7c7b\u4e0e\u63a5\u53e3\u7684\u5173\u7cfb\uff0c\u8868\u793a\u7c7b\u662f\u63a5\u53e3\u6240\u6709\u7279\u5f81\u548c\u884c\u4e3a\u7684\u5b9e\u73b0\u3002 \u5b9e\u73b0\u4f7f\u7528\u4e00\u4e2a\u865a\u7ebf+\u7a7a\u5fc3\u4e09\u89d2\u7bad\u5934\uff0c\u4ece\u5b9e\u4f8b\u6307\u5411\u63a5\u53e3\u5373\u8868\u793a\u4e00\u4e2a\u5b9e\u73b0\u3002 \u5173\u8054 \u662f\u4e00\u79cd\u62e5\u6709\u5173\u7cfb\uff0c\u5b83\u4f7f\u4e00\u4e2a\u7c7b\u77e5\u9053\u53e6\u4e00\u4e2a\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u5f53\u4e00\u4e2a\u5173\u7cfb\u660e\u663e\u662f\u4e00\u79cd\u62e5\u6709\u5173\u7cfb\uff0c\u4f46\u4e0d\u662f\u805a\u5408\u4e5f\u4e0d\u662f\u7ec4\u5408\u90a3\u6837\u6765\u63cf\u8ff0\u6574\u4f53\u4e0e\u5c40\u90e8\u7684\u65f6\u5019\uff0c\u5c31\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u5173\u8054\u5173\u7cfb\u6765\u63cf\u8ff0\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u524d\u4e24\u8005\u90fd\u662f\uff08\u66f4\u52a0\u51c6\u786e\u7684\uff09\u5173\u8054\u5173\u7cfb\uff0c\u4f7f\u7528\u5e26\u5b9e\u7ebf\u7684\u7bad\u5934\u3002 \u805a\u5408 \u662f\u6574\u4f53\u4e0e\u90e8\u5206\u7684\u5173\u7cfb\uff0c\u4e14\u90e8\u5206\u53ef\u4ee5\u79bb\u5f00\u6574\u4f53\u800c\u5355\u72ec\u5b58\u5728\u3002\u5982\u8f66\u548c\u8f66\u8f6e\u3002\u662f\u5f31\u5173\u8054 \u805a\u5408\u4f7f\u7528\u4e00\u4e2a\u5b9e\u7ebf+\u7a7a\u5fc3\u83f1\u5f62\u7bad\u5934\uff0c\u4ece\u6574\u4f53\u6307\u5411\u5c40\u90e8\u5373\u8868\u793a\u4e00\u4e2a\u805a\u5408\u3002 \u7ec4\u5408 \u662f\u6574\u4f53\u4e0e\u90e8\u5206\u7684\u5173\u7cfb\uff0c\u4f46\u90e8\u5206\u4e0d\u53ef\u4ee5\u79bb\u5f00\u6574\u4f53\u800c\u5355\u72ec\u5b58\u5728\u3002\u5982\u9e1f\u548c\u7fc5\u8180\u3002\u662f\u5f3a\u5173\u8054 \u7ec4\u5408\u4f7f\u7528\u4e00\u4e2a\u5b9e\u7ebf+\u5b9e\u5fc3\u83f1\u5f62\u7bad\u5934\uff0c\u4ece\u6574\u4f53\u6307\u5411\u5c40\u90e8\u5373\u8868\u793a\u4e00\u4e2a\u7ec4\u5408\u3002 \u4f9d\u8d56 \u662f\u4e00\u79cd\u4f7f\u7528\u5173\u7cfb\uff0c\u5373\u4e00\u4e2a\u7c7b\u7684\u5b9e\u73b0\u9700\u8981\u53e6\u4e00\u4e2a\u7c7b\u7684\u534f\u52a9\u3002 \u4f9d\u8d56\u5173\u7cfb\u4e0d\u540c\u4e8e\u5173\u8054\u5173\u7cfb\uff0c\u4f7f\u7528\u4e00\u4e2a\u865a\u7ebf\u7bad\u5934\uff0c\u4ece\u4f7f\u7528\u8005\u6307\u5411\u88ab\u4f7f\u7528\u8005\u3002","title":"\u7c7b\u56fe\uff08\u6700\u5e38\u7528\uff0c\u6700\u91cd\u8981\uff09"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_3","text":"","title":"\u5bf9\u8c61\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_4","text":"","title":"\u72b6\u6001\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_5","text":"","title":"\u65f6\u5e8f\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_6","text":"","title":"\u6d3b\u52a8\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_7","text":"","title":"\u534f\u4f5c\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_8","text":"","title":"\u6784\u4ef6\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/UML/#_9","text":"","title":"\u90e8\u7f72\u56fe"},{"location":"c%E8%AF%AD%E8%A8%80/void/","text":"void*\u6cdb\u578b \u6cdb\u578b\u7f16\u7a0b \u6cdb\u578b\u7f16\u7a0b\u662f\u4e00\u79cd\u7f16\u7a0b\u65b9\u6cd5\uff0c\u65e8\u5728\u7f16\u5199\u53ef\u9002\u7528\u4e8e \u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u901a\u7528\u4ee3\u7801 \uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u91cd\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u51cf\u5c11\u4ee3\u7801\u5197\u4f59\u3002 \u6cdb\u578b\u6280\u672f void*\u6307\u9488 void \u662f\u4e00\u79cd\u901a\u7528\u6307\u9488\uff0c\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5730\u5740\uff0c\u53ca\u53ef\u4ee5\u7528\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u5bf9void\u6307\u9488\u8d4b\u503c\uff0c\u4e0d\u9700\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u8981\u5c06void\u6307\u9488\u8d4b\u7ed9\u5176\u4ed6\u7c7b\u578b\u6307\u9488\uff0c\u5219\u9700 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 *\u3002 \u4f7f\u7528\u65f6\u5e94\u683c\u5916\u7559\u610f\u5185\u5b58\u5927\u5c0f\uff0c\u7c7b\u578b\u8f6c\u6362\u3002\u5e38\u7528sizeof\u6c42\u5f97\u5185\u5b58\u5927\u5c0f\uff0cmallocsize\uff0cmemcpy\u6307\u5b9a\u5185\u5b58\u5927\u5c0f\u4e0e\u8d4b\u503c\u3002 \u5b9e\u4f8b\uff1a \u5b9e\u73b0\u4e24\u4e2a\u5143\u7d20\u7684\u4ea4\u6362 ~~~c int swap(void p1,void p2,int size) { void *temp; if(temp = malloc(size) == NULL) return -1; memcpy(temp,p1,size); memcpy(p1,p2,size); memcpy(p2,temp,size); free(temp); return 0; } ~~~ \u5b8f\u5b9a\u4e49\u5b9e\u73b0\u6cdb\u578b","title":"void*\u6cdb\u578b"},{"location":"c%E8%AF%AD%E8%A8%80/void/#void","text":"","title":"void*\u6cdb\u578b"},{"location":"c%E8%AF%AD%E8%A8%80/void/#_1","text":"\u6cdb\u578b\u7f16\u7a0b\u662f\u4e00\u79cd\u7f16\u7a0b\u65b9\u6cd5\uff0c\u65e8\u5728\u7f16\u5199\u53ef\u9002\u7528\u4e8e \u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u901a\u7528\u4ee3\u7801 \uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u91cd\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u51cf\u5c11\u4ee3\u7801\u5197\u4f59\u3002","title":"\u6cdb\u578b\u7f16\u7a0b"},{"location":"c%E8%AF%AD%E8%A8%80/void/#_2","text":"","title":"\u6cdb\u578b\u6280\u672f"},{"location":"c%E8%AF%AD%E8%A8%80/void/#void_1","text":"void \u662f\u4e00\u79cd\u901a\u7528\u6307\u9488\uff0c\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5730\u5740\uff0c\u53ca\u53ef\u4ee5\u7528\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u5bf9void\u6307\u9488\u8d4b\u503c\uff0c\u4e0d\u9700\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u8981\u5c06void\u6307\u9488\u8d4b\u7ed9\u5176\u4ed6\u7c7b\u578b\u6307\u9488\uff0c\u5219\u9700 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 *\u3002 \u4f7f\u7528\u65f6\u5e94\u683c\u5916\u7559\u610f\u5185\u5b58\u5927\u5c0f\uff0c\u7c7b\u578b\u8f6c\u6362\u3002\u5e38\u7528sizeof\u6c42\u5f97\u5185\u5b58\u5927\u5c0f\uff0cmallocsize\uff0cmemcpy\u6307\u5b9a\u5185\u5b58\u5927\u5c0f\u4e0e\u8d4b\u503c\u3002 \u5b9e\u4f8b\uff1a \u5b9e\u73b0\u4e24\u4e2a\u5143\u7d20\u7684\u4ea4\u6362 ~~~c int swap(void p1,void p2,int size) { void *temp; if(temp = malloc(size) == NULL) return -1; memcpy(temp,p1,size); memcpy(p1,p2,size); memcpy(p2,temp,size); free(temp); return 0; } ~~~","title":"void*\u6307\u9488"},{"location":"c%E8%AF%AD%E8%A8%80/void/#_3","text":"","title":"\u5b8f\u5b9a\u4e49\u5b9e\u73b0\u6cdb\u578b"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/","text":"\u6982\u5ff5\u8fa8\u6790 \u51fd\u6570\u6307\u9488 \uff1a\u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684 \u6307\u9488\u53d8\u91cf \u3002\u5176\u5b9e\u7b49\u540c\u4e8e\u666e\u901a\u6307\u9488\uff0c\u53ea\u662f\u666e\u901a\u6307\u9488\u6307\u5411\u7684\u662f\u53d8\u91cf\u7684\u5730\u5740\uff0c\u800c\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u5730\u5740\uff0c\u4e00\u6bb5\u4ee3\u7801\u7684\u5730\u5740\u3002 /*\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570*/ int maxvalue(int a, int b){ return a>b ? a : b; } int (*p)(int, int) = NULL;//\u5b9a\u4e49\u4e00\u4e2a\u4e0emaxValue\u517c\u5bb9\u7684\u6307\u9488 p = maxvalue; p(20, 30); \u6307\u9488\u51fd\u6570 \uff1a\u5b9e\u8d28\u662f \u4e00\u4e2a\u51fd\u6570 \uff0c\u53ea\u662f\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488 \u5b9a\u4e49\uff1a int *pfun(int ,int);//\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6574\u6570int\u7684\u6307\u9488 \u51fd\u6570\u6307\u9488\u5e94\u7528-\u56de\u8c03\u51fd\u6570 \u5e94\u7528\u7684\u7cbe\u9ad3\u5728\u4e8e\u5c06 \u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u4f7f\u7528 \u3002 \u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2a\u51fd\u6570A\u6765\u5b9e\u73b0\u529f\u80fda\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u51fd\u6570B\u6765\u5b9e\u73b0\u529f\u80fdb\uff0c\u5f53\u529f\u80fdb\u4e2d\u5305\u542b\u529f\u80fda\u65f6\uff0c\u53ef\u5728\u51fd\u6570B\u7684\u53c2\u6570\u4e2d\u52a0\u5165\u4e00\u4e2a\u6307\u9488\uff08 \u51fd\u6570\u6307\u9488 \uff09\uff0c\u8be5\u6307\u9488\u6307\u5411\u51fd\u6570A\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u51fd\u6570B\u8c03\u7528\u4e86\u51fd\u6570A,\u4e0d\u9700\u8981\u518d\u5728B\u4e2d\u5199\u4e00\u6bb5\u5b9e\u73b0\u529f\u80fda\u7684\u91cd\u590d\u4ee3\u7801\u4e86\uff0c\u51fd\u6570A\u79f0\u4e3a\u56de\u8c03\u51fd\u6570\u3002 /*\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u4e00\u4e2a\u6574\u5f62\u6570\u7ec4\u4e2d\u6bd450\u5927\u6216\u5c0f\u7684\u6253\u5370\u5728\u63a7\u5236\u53f0*/ BOOL cmpbigger(int number, int set){ return number > set; } BOOL cmpless(int number, int set){ return number < set; } void cmp(int *numarray, int count, int set, BOOL (*p)(int , int)){ for(int i = 0; i < count; i++) { if(p(*(numarray + i),set)) { printf(\"%d\\n\",*(numarrey + i)); } } } int main() { int numarray[5] = {15, 34, 44, 56, 64}; int set = 50; // \u5927\u4e8e\u88ab\u6bd4\u8f83\u6570\u5b57\u60c5\u51b5\uff1a cmp(numberArray, 5, compareNumber, cmpbigger); // \u5c0f\u4e8e\u88ab\u6bd4\u8f83\u6570\u5b57\u60c5\u51b5\uff1a cmp(numberArray, 5, compareNumber, cmpless); return 0; }","title":"\u51fd\u6570\u6307\u9488"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/#_1","text":"\u51fd\u6570\u6307\u9488 \uff1a\u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684 \u6307\u9488\u53d8\u91cf \u3002\u5176\u5b9e\u7b49\u540c\u4e8e\u666e\u901a\u6307\u9488\uff0c\u53ea\u662f\u666e\u901a\u6307\u9488\u6307\u5411\u7684\u662f\u53d8\u91cf\u7684\u5730\u5740\uff0c\u800c\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u5730\u5740\uff0c\u4e00\u6bb5\u4ee3\u7801\u7684\u5730\u5740\u3002 /*\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570*/ int maxvalue(int a, int b){ return a>b ? a : b; } int (*p)(int, int) = NULL;//\u5b9a\u4e49\u4e00\u4e2a\u4e0emaxValue\u517c\u5bb9\u7684\u6307\u9488 p = maxvalue; p(20, 30); \u6307\u9488\u51fd\u6570 \uff1a\u5b9e\u8d28\u662f \u4e00\u4e2a\u51fd\u6570 \uff0c\u53ea\u662f\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488 \u5b9a\u4e49\uff1a int *pfun(int ,int);//\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6574\u6570int\u7684\u6307\u9488","title":"\u6982\u5ff5\u8fa8\u6790"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/#-","text":"\u5e94\u7528\u7684\u7cbe\u9ad3\u5728\u4e8e\u5c06 \u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u4f7f\u7528 \u3002 \u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2a\u51fd\u6570A\u6765\u5b9e\u73b0\u529f\u80fda\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u51fd\u6570B\u6765\u5b9e\u73b0\u529f\u80fdb\uff0c\u5f53\u529f\u80fdb\u4e2d\u5305\u542b\u529f\u80fda\u65f6\uff0c\u53ef\u5728\u51fd\u6570B\u7684\u53c2\u6570\u4e2d\u52a0\u5165\u4e00\u4e2a\u6307\u9488\uff08 \u51fd\u6570\u6307\u9488 \uff09\uff0c\u8be5\u6307\u9488\u6307\u5411\u51fd\u6570A\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u51fd\u6570B\u8c03\u7528\u4e86\u51fd\u6570A,\u4e0d\u9700\u8981\u518d\u5728B\u4e2d\u5199\u4e00\u6bb5\u5b9e\u73b0\u529f\u80fda\u7684\u91cd\u590d\u4ee3\u7801\u4e86\uff0c\u51fd\u6570A\u79f0\u4e3a\u56de\u8c03\u51fd\u6570\u3002 /*\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u4e00\u4e2a\u6574\u5f62\u6570\u7ec4\u4e2d\u6bd450\u5927\u6216\u5c0f\u7684\u6253\u5370\u5728\u63a7\u5236\u53f0*/ BOOL cmpbigger(int number, int set){ return number > set; } BOOL cmpless(int number, int set){ return number < set; } void cmp(int *numarray, int count, int set, BOOL (*p)(int , int)){ for(int i = 0; i < count; i++) { if(p(*(numarray + i),set)) { printf(\"%d\\n\",*(numarrey + i)); } } } int main() { int numarray[5] = {15, 34, 44, 56, 64}; int set = 50; // \u5927\u4e8e\u88ab\u6bd4\u8f83\u6570\u5b57\u60c5\u51b5\uff1a cmp(numberArray, 5, compareNumber, cmpbigger); // \u5c0f\u4e8e\u88ab\u6bd4\u8f83\u6570\u5b57\u60c5\u51b5\uff1a cmp(numberArray, 5, compareNumber, cmpless); return 0; }","title":"\u51fd\u6570\u6307\u9488\u5e94\u7528-\u56de\u8c03\u51fd\u6570"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%A0%86%E6%A0%88/","text":"\u5806\u6808 \u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u6808 \u7528\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\u7684\u4e00\u79cd\u7ed3\u6784\u3002\u6808\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5177\u6709 \u540e\u8fdb\u5148\u51fa \u7684\u7279\u6027\uff1b\u5806\u662f\u4e00\u79cd\u7ecf\u8fc7\u6392\u5e8f\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c \u5b58\u53d6\u662f\u968f\u610f\u7684 \u3002 \u5185\u5b58\u5206\u914d\u4e2d\u7684\u5806\u6808 \u5185\u5b58\u5206\u914d\u7684\u533a\u57df\uff1a \u6808\uff08Stack\uff09\uff1a\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\uff0c\u7528\u4e8e\u5b58\u50a8 \u5c40\u90e8\u53d8\u91cf \uff0c\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u5730\u5740\uff0c\u7ba1\u7406\u51fd\u6570\u8c03\u7528\u548c\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u65f6\u521b\u5efa\uff0c\u8fd4\u56de\u65f6\u9500\u6bc1\u3002 \u5806\uff08Heap\uff09\uff1a\u4eba\u4e3a\u624b\u52a8\u5206\u914d\uff0c\u9500\u6bc1\uff0c\u5982malloc,free\uff0c\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002 \u9759\u6001/\u5168\u5c40\u53d8\u91cf\uff1a\u5b58\u50a8 \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf \u4ee3\u7801\u533a\uff1a\u5b58\u50a8\u53ef\u6267\u884c\u6307\u4ee4 \u5e38\u91cf\u533a\uff1a \u5b57\u7b26\u4e32/\u5e38\u91cf \u3002","title":"\u5806\u6808"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%A0%86%E6%A0%88/#_1","text":"","title":"\u5806\u6808"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%A0%86%E6%A0%88/#_2","text":"\u7528\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\u7684\u4e00\u79cd\u7ed3\u6784\u3002\u6808\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5177\u6709 \u540e\u8fdb\u5148\u51fa \u7684\u7279\u6027\uff1b\u5806\u662f\u4e00\u79cd\u7ecf\u8fc7\u6392\u5e8f\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c \u5b58\u53d6\u662f\u968f\u610f\u7684 \u3002","title":"\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u6808"},{"location":"c%E8%AF%AD%E8%A8%80/%E5%A0%86%E6%A0%88/#_3","text":"\u5185\u5b58\u5206\u914d\u7684\u533a\u57df\uff1a \u6808\uff08Stack\uff09\uff1a\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\uff0c\u7528\u4e8e\u5b58\u50a8 \u5c40\u90e8\u53d8\u91cf \uff0c\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u5730\u5740\uff0c\u7ba1\u7406\u51fd\u6570\u8c03\u7528\u548c\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u65f6\u521b\u5efa\uff0c\u8fd4\u56de\u65f6\u9500\u6bc1\u3002 \u5806\uff08Heap\uff09\uff1a\u4eba\u4e3a\u624b\u52a8\u5206\u914d\uff0c\u9500\u6bc1\uff0c\u5982malloc,free\uff0c\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002 \u9759\u6001/\u5168\u5c40\u53d8\u91cf\uff1a\u5b58\u50a8 \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf \u4ee3\u7801\u533a\uff1a\u5b58\u50a8\u53ef\u6267\u884c\u6307\u4ee4 \u5e38\u91cf\u533a\uff1a \u5b57\u7b26\u4e32/\u5e38\u91cf \u3002","title":"\u5185\u5b58\u5206\u914d\u4e2d\u7684\u5806\u6808"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/","text":"\u9762\u5411\u5bf9\u8c61\u4e0e\u9762\u5411\u8fc7\u7a0b \u9762\u5411\u8fc7\u7a0b \u9762\u5411\u8fc7\u7a0b\u662f\u4e00\u79cd\u4ee5\u4e8b\u4ef6\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u601d\u60f3\uff0c\u7f16\u7a0b\u7684\u65f6\u5019\u628a\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\u5206\u6790\u51fa\u6765\uff0c\u7136\u540e\u7528 \u51fd\u6570 \u628a\u8fd9\u4e9b\u6b65\u9aa4\u5b9e\u73b0\uff0c \u5728\u4e00\u6b65\u4e00\u6b65\u7684\u5177\u4f53\u6b65\u9aa4\u4e2d\u518d\u6309\u987a\u5e8f\u8c03\u7528\u51fd\u6570\u3002\u66f4\u504f\u5411\u4e8e\u72ec\u7279\u6027\uff0c\u4e13\u95e8\u6027 \u3002 \u9762\u5411\u5bf9\u8c61 \u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u4ee5\u201c\u5bf9\u8c61\u201d\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u601d\u60f3\uff0c\u628a\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5206\u89e3\u6210\u5404\u4e2a\u5bf9\u8c61\u3002\u5bf9\u8c61\u662f\u5bf9\u73b0\u5b9e\u4e16\u754c\u4e2d\u67d0\u4e2a\u5177\u4f53\u6216\u62bd\u8c61\u4e8b\u7269\u7684\u62bd\u8c61\u8868\u793a\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5177\u6709\u72b6\u6001\uff08\u5c5e\u6027\uff09\u548c\u884c\u4e3a\uff08\u65b9\u6cd5\uff09\u3002\u72b6\u6001\u8868\u793a\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u800c\u884c\u4e3a\u8868\u793a\u5bf9\u8c61\u80fd\u591f\u6267\u884c\u7684\u64cd\u4f5c\u3002 \u66f4\u504f\u5411\u4e8e\u4e00\u822c\u6027\uff0c\u89c4\u5f8b\u6027 \u3002 \u6838\u5fc3\u6982\u5ff5 \u5c01\u88c5\uff08Encapsulation\uff09 \uff1a\u5c06\u5bf9\u8c61\u7684\u72b6\u6001\u548c\u884c\u4e3a\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u901a\u8fc7\u9650\u5236\u5bf9\u5185\u90e8\u6570\u636e\u548c\u65b9\u6cd5\u7684\u76f4\u63a5\u8bbf\u95ee\uff0c\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u5b89\u5168\u6027\u548c\u7075\u6d3b\u6027\u3002 \u7ee7\u627f\uff08Inheritance\uff09 \uff1a\u901a\u8fc7\u7ee7\u627f\u673a\u5236\uff0c\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6d3e\u751f\u51fa\u5b50\u7c7b\uff0c\u4ece\u800c\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u7ee7\u627f\u4fc3\u8fdb\u4e86\u4ee3\u7801\u91cd\u7528\u548c\u6269\u5c55\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55\u3002 \u591a\u6001\uff08Polymorphism\uff09 \uff1a\u591a\u6001\u5141\u8bb8\u4e0d\u540c\u7684\u5bf9\u8c61\u5bf9\u540c\u4e00\u4e2a\u6d88\u606f\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94\u3002\u901a\u8fc7\u591a\u6001\uff0c\u53ef\u4ee5\u7f16\u5199\u51fa\u66f4\u901a\u7528\u3001\u7075\u6d3b\u548c\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u3002 \u591a\u6001\u7684\u6982\u5ff5\uff1a\u901a\u4fd7\u6765\u8bf4\uff0c\u5c31\u662f\u591a\u79cd\u5f62\u6001\uff0c\u5177\u4f53\u70b9\u5c31\u662f\u53bb\u5b8c\u6210\u67d0\u4e2a\u884c\u4e3a\uff0c\u5f53\u4e0d\u540c\u7684\u5bf9\u8c61\u53bb\u5b8c\u6210\u65f6\u4f1a\u4ea7\u751f\u51fa\u4e0d\u540c\u7684\u72b6\u6001\u3002 c\u8bed\u8a00\u5b9e\u73b0oop \u5c01\u88c5 \u5c01\u88c5\u5c31\u662f\u628a\u5173\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u5206\u6563\u7684\u6240\u6709\u4e1c\u897f\uff08 \u901a\u5e38\u6307\u5c5e\u6027\u548c\u65b9\u6cd5 \uff09\u96c6\u4e2d\u653e\u5728\u4e00\u4e2a\u6574\u4f53\u4e2d\uff08 \u5373\u7c7b \uff09\u3002\u5c01\u88c5\u7684\u672c\u8d28\u662f\u9690\u85cf\u4fe1\u606f\u7684\u8fc7\u7a0b\uff0c\u4f7f\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\u4e0d\u88ab\u5916\u754c\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u3002 c\u8bed\u8a00\u4e2d\u5e38\u7528 \u7ed3\u6784\u4f53 \u5b9e\u73b0\u5bf9\u4e8b\u7269\u7684\u5c01\u88c5\u3002\u5e94\u638c\u63e1\u51fd\u6570\u6307\u9488\u7528\u6cd5 typedef struct human { int age; char sex; void (*set_age)(struct human *p, int age); int (*get_age)(struct human *p); void (*set_sex)(struct human *p, char sex); char (*get_sex)(struct human *p); } Human; void set_age(Human *p, int age) { p->age = age; } ...... int main() { Human p; p.set_age = set_age(); p.set_age(&p, 18); retuen 0; } \u7ee7\u627f C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 \u7ed3\u6784\u4f53\u5d4c\u5957 \u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u7c7b\u7684\u7ee7\u627f\uff0c\u4f46\u662f\u9700\u8981\u786e\u4fdd\u7236\u7c7b\u7ed3\u6784\u4f53\u5f15\u7528\u9700\u8981\u653e\u5728\u5b50\u7c7b\u7ed3\u6784\u4f53\u6210\u5458\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u6d89\u53ca\u5185\u5b58\u5bf9\u9f50\u95ee\u9898\uff09\u3002 typedef struct human { int age; char sex; } Human; typedef struct person{ Human human; char *name; } Person; Person* create_person(int age, char sex, char *name) { Person* cperson = (Person*) malloc(sizeof(Person)); cperson->human.age = age; cperson->human.sex = sex; cperson->name = name; return cperson; } int main() { Person* cperson = create_person(18, 'w', \"lucy\"); printf(\"(%d, %c) - name: %s\\n\", cperson->human.age, cperson->human.sex, cperson->name); free(cperson); return 0; } \u591a\u6001 C\u8bed\u8a00\u4e2d\u5bf9\u4e8e\u591a\u6001\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9 \u51fd\u6570\u6307\u9488\uff0c\u901a\u8fc7\u56de\u8c03\u51fd\u6570 \uff0c\u5229\u7528\u540c\u4e00\u7684\u63a5\u53e3\u5904\u7406\u4e0d\u540c\u7684\u6570\u636e\u3002\u5177\u6709\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u540d\u8c03\u7528\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u3002 typedef struct shape { void (*draw)(void* shape); } Shape; /*\u8fd9\u4e2a\u7ed3\u6784\u4f53\u53ef\u4ee5\u770b\u4f5c\u662f\u6240\u6709\u5177\u4f53\u5f62\u72b6\u7684\u62bd\u8c61\u57fa\u7c7b\u578b\uff0cdraw \u51fd\u6570\u6307\u9488\u4ee3\u8868\u4e86 \u201c\u7ed8\u5236\u201d \u8fd9\u4e2a\u62bd\u8c61\u884c\u4e3a\u3002*/ typedef struct { Shape base; int x; int y; int radius; } Circle; typedef struct { Shape base; int x1; int y1; int x2; int y2; } Line; /*\u5b9a\u4e49\u5177\u4f53\u7c7b\u578b*/ void drawCircle(void* shape) { Circle* circle = (Circle*)shape; printf(\"Circle at (%d,%d) with radius %d\\n\", circle->x, circle->y, circle->radius); } void drawLine(void* shape) { Line* line = (Line*)shape; printf(\"Line from (%d,%d) to (%d,%d)\\n\", line->x1, line->y1, line->x2, line->y2); } /*\u5b9a\u4e49\u5177\u4f53\u7ed8\u5236\u51fd\u6570*/ int main() { Circle circle = { .base = { .draw = drawCircle } .x = 1, .y = 5, .radius = 10, }; Line line = { .base = { .draw = drawLine } .x1 = 2, .y1 = 3, .x2 = 7, .y2 = 9, }; /*\u521b\u5efa\u5177\u4f53\u5f62\u72b6*/ Shape* shapes[2]; shapes[0] = (Shape*)&circle; shapes[1] = (Shape*)&line; for (int i = 0; i < 2; i++) { shapes[i]->draw(shapes[i]); } return 0; }","title":"\u9762\u5411\u5bf9\u8c61\u4e0e\u9762\u5411\u8fc7\u7a0b"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_1","text":"","title":"\u9762\u5411\u5bf9\u8c61\u4e0e\u9762\u5411\u8fc7\u7a0b"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_2","text":"\u9762\u5411\u8fc7\u7a0b\u662f\u4e00\u79cd\u4ee5\u4e8b\u4ef6\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u601d\u60f3\uff0c\u7f16\u7a0b\u7684\u65f6\u5019\u628a\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\u5206\u6790\u51fa\u6765\uff0c\u7136\u540e\u7528 \u51fd\u6570 \u628a\u8fd9\u4e9b\u6b65\u9aa4\u5b9e\u73b0\uff0c \u5728\u4e00\u6b65\u4e00\u6b65\u7684\u5177\u4f53\u6b65\u9aa4\u4e2d\u518d\u6309\u987a\u5e8f\u8c03\u7528\u51fd\u6570\u3002\u66f4\u504f\u5411\u4e8e\u72ec\u7279\u6027\uff0c\u4e13\u95e8\u6027 \u3002","title":"\u9762\u5411\u8fc7\u7a0b"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_3","text":"\u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u4ee5\u201c\u5bf9\u8c61\u201d\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u601d\u60f3\uff0c\u628a\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5206\u89e3\u6210\u5404\u4e2a\u5bf9\u8c61\u3002\u5bf9\u8c61\u662f\u5bf9\u73b0\u5b9e\u4e16\u754c\u4e2d\u67d0\u4e2a\u5177\u4f53\u6216\u62bd\u8c61\u4e8b\u7269\u7684\u62bd\u8c61\u8868\u793a\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5177\u6709\u72b6\u6001\uff08\u5c5e\u6027\uff09\u548c\u884c\u4e3a\uff08\u65b9\u6cd5\uff09\u3002\u72b6\u6001\u8868\u793a\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u800c\u884c\u4e3a\u8868\u793a\u5bf9\u8c61\u80fd\u591f\u6267\u884c\u7684\u64cd\u4f5c\u3002 \u66f4\u504f\u5411\u4e8e\u4e00\u822c\u6027\uff0c\u89c4\u5f8b\u6027 \u3002","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_4","text":"\u5c01\u88c5\uff08Encapsulation\uff09 \uff1a\u5c06\u5bf9\u8c61\u7684\u72b6\u6001\u548c\u884c\u4e3a\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u901a\u8fc7\u9650\u5236\u5bf9\u5185\u90e8\u6570\u636e\u548c\u65b9\u6cd5\u7684\u76f4\u63a5\u8bbf\u95ee\uff0c\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u5b89\u5168\u6027\u548c\u7075\u6d3b\u6027\u3002 \u7ee7\u627f\uff08Inheritance\uff09 \uff1a\u901a\u8fc7\u7ee7\u627f\u673a\u5236\uff0c\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6d3e\u751f\u51fa\u5b50\u7c7b\uff0c\u4ece\u800c\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u7ee7\u627f\u4fc3\u8fdb\u4e86\u4ee3\u7801\u91cd\u7528\u548c\u6269\u5c55\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55\u3002 \u591a\u6001\uff08Polymorphism\uff09 \uff1a\u591a\u6001\u5141\u8bb8\u4e0d\u540c\u7684\u5bf9\u8c61\u5bf9\u540c\u4e00\u4e2a\u6d88\u606f\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94\u3002\u901a\u8fc7\u591a\u6001\uff0c\u53ef\u4ee5\u7f16\u5199\u51fa\u66f4\u901a\u7528\u3001\u7075\u6d3b\u548c\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u3002 \u591a\u6001\u7684\u6982\u5ff5\uff1a\u901a\u4fd7\u6765\u8bf4\uff0c\u5c31\u662f\u591a\u79cd\u5f62\u6001\uff0c\u5177\u4f53\u70b9\u5c31\u662f\u53bb\u5b8c\u6210\u67d0\u4e2a\u884c\u4e3a\uff0c\u5f53\u4e0d\u540c\u7684\u5bf9\u8c61\u53bb\u5b8c\u6210\u65f6\u4f1a\u4ea7\u751f\u51fa\u4e0d\u540c\u7684\u72b6\u6001\u3002","title":"\u6838\u5fc3\u6982\u5ff5"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#coop","text":"","title":"c\u8bed\u8a00\u5b9e\u73b0oop"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_5","text":"\u5c01\u88c5\u5c31\u662f\u628a\u5173\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u5206\u6563\u7684\u6240\u6709\u4e1c\u897f\uff08 \u901a\u5e38\u6307\u5c5e\u6027\u548c\u65b9\u6cd5 \uff09\u96c6\u4e2d\u653e\u5728\u4e00\u4e2a\u6574\u4f53\u4e2d\uff08 \u5373\u7c7b \uff09\u3002\u5c01\u88c5\u7684\u672c\u8d28\u662f\u9690\u85cf\u4fe1\u606f\u7684\u8fc7\u7a0b\uff0c\u4f7f\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\u4e0d\u88ab\u5916\u754c\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u3002 c\u8bed\u8a00\u4e2d\u5e38\u7528 \u7ed3\u6784\u4f53 \u5b9e\u73b0\u5bf9\u4e8b\u7269\u7684\u5c01\u88c5\u3002\u5e94\u638c\u63e1\u51fd\u6570\u6307\u9488\u7528\u6cd5 typedef struct human { int age; char sex; void (*set_age)(struct human *p, int age); int (*get_age)(struct human *p); void (*set_sex)(struct human *p, char sex); char (*get_sex)(struct human *p); } Human; void set_age(Human *p, int age) { p->age = age; } ...... int main() { Human p; p.set_age = set_age(); p.set_age(&p, 18); retuen 0; }","title":"\u5c01\u88c5"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_6","text":"C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 \u7ed3\u6784\u4f53\u5d4c\u5957 \u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u7c7b\u7684\u7ee7\u627f\uff0c\u4f46\u662f\u9700\u8981\u786e\u4fdd\u7236\u7c7b\u7ed3\u6784\u4f53\u5f15\u7528\u9700\u8981\u653e\u5728\u5b50\u7c7b\u7ed3\u6784\u4f53\u6210\u5458\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u6d89\u53ca\u5185\u5b58\u5bf9\u9f50\u95ee\u9898\uff09\u3002 typedef struct human { int age; char sex; } Human; typedef struct person{ Human human; char *name; } Person; Person* create_person(int age, char sex, char *name) { Person* cperson = (Person*) malloc(sizeof(Person)); cperson->human.age = age; cperson->human.sex = sex; cperson->name = name; return cperson; } int main() { Person* cperson = create_person(18, 'w', \"lucy\"); printf(\"(%d, %c) - name: %s\\n\", cperson->human.age, cperson->human.sex, cperson->name); free(cperson); return 0; }","title":"\u7ee7\u627f"},{"location":"c%E8%AF%AD%E8%A8%80/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_7","text":"C\u8bed\u8a00\u4e2d\u5bf9\u4e8e\u591a\u6001\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9 \u51fd\u6570\u6307\u9488\uff0c\u901a\u8fc7\u56de\u8c03\u51fd\u6570 \uff0c\u5229\u7528\u540c\u4e00\u7684\u63a5\u53e3\u5904\u7406\u4e0d\u540c\u7684\u6570\u636e\u3002\u5177\u6709\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u540d\u8c03\u7528\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u3002 typedef struct shape { void (*draw)(void* shape); } Shape; /*\u8fd9\u4e2a\u7ed3\u6784\u4f53\u53ef\u4ee5\u770b\u4f5c\u662f\u6240\u6709\u5177\u4f53\u5f62\u72b6\u7684\u62bd\u8c61\u57fa\u7c7b\u578b\uff0cdraw \u51fd\u6570\u6307\u9488\u4ee3\u8868\u4e86 \u201c\u7ed8\u5236\u201d \u8fd9\u4e2a\u62bd\u8c61\u884c\u4e3a\u3002*/ typedef struct { Shape base; int x; int y; int radius; } Circle; typedef struct { Shape base; int x1; int y1; int x2; int y2; } Line; /*\u5b9a\u4e49\u5177\u4f53\u7c7b\u578b*/ void drawCircle(void* shape) { Circle* circle = (Circle*)shape; printf(\"Circle at (%d,%d) with radius %d\\n\", circle->x, circle->y, circle->radius); } void drawLine(void* shape) { Line* line = (Line*)shape; printf(\"Line from (%d,%d) to (%d,%d)\\n\", line->x1, line->y1, line->x2, line->y2); } /*\u5b9a\u4e49\u5177\u4f53\u7ed8\u5236\u51fd\u6570*/ int main() { Circle circle = { .base = { .draw = drawCircle } .x = 1, .y = 5, .radius = 10, }; Line line = { .base = { .draw = drawLine } .x1 = 2, .y1 = 3, .x2 = 7, .y2 = 9, }; /*\u521b\u5efa\u5177\u4f53\u5f62\u72b6*/ Shape* shapes[2]; shapes[0] = (Shape*)&circle; shapes[1] = (Shape*)&line; for (int i = 0; i < 2; i++) { shapes[i]->draw(shapes[i]); } return 0; }","title":"\u591a\u6001"}]}